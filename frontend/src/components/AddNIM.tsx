import React, { useState } from 'react';
import axios from 'axios';
import { NIMRecord } from '../interfaces/NIMRecord';

function AddNIM() {
    const [newNim, setNewNim] = useState<NIMRecord>({
        NIM_ID: 0, // This will be auto-generated by the database
        Model: '',
        Temperature: '',
        Top_P: '',
        Max_Tokens: 1024,
        Stream: false,
        Name: '',
    });

    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
        const target = event.target;
        const value = target.type === 'checkbox' ? target.checked : target.value;
        const name = target.name;
    
        setNewNim({
            ...newNim,
            [name]: value,
        });
    };
    

    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {
        event.preventDefault();
    
        // Destructure newNim to exclude NIM_ID and capture the rest of the properties
        const { NIM_ID, ...payload } = newNim;
    
        try {
            // Specify the content type as JSON and send the payload
            const response = await axios.post('/api/create_nim', payload, {
                headers: {
                    'Content-Type': 'application/json',
                },
            });
            console.log('NIM created:', response.data);
    
            // Redirect to the home page after successful creation
            window.location.href = '/';
        } catch (error) {
            // Log the data to the console if there's an error
            console.log('Error creating NIM:', payload);
            console.error('Error creating NIM:', error);
        }
    };
    

    return (
        <div className="container">
            <div className="row justify-content-center">
                <div className="col-md-6">
                    <div className="card mt-5">
                        <div className="card-body">
                            <h2 className="card-title text-center mb-4">Add NIM</h2>
                            <form onSubmit={handleSubmit} className="form">
                                <div className="mb-3">
                                    <label htmlFor="Name" className="form-label">Name:</label>
                                    <input
                                        type="text"
                                        className="form-control"
                                        id="Name"
                                        name="Name"
                                        value={newNim.Name}
                                        onChange={handleChange}
                                        required
                                    />
                                </div>
                                <div className="mb-3">
                                    <label htmlFor="Model" className="form-label">Model:</label>
                                    <input
                                        type="text"
                                        className="form-control"
                                        id="Model"
                                        name="Model"
                                        value={newNim.Model}
                                        onChange={handleChange}
                                        required
                                    />
                                </div>
                                <div className="mb-3">
                                    <label htmlFor="Temperature" className="form-label">Temperature:</label>
                                    <input
                                        type="number"
                                        className="form-control"
                                        id="Temperature"
                                        name="Temperature"
                                        value={newNim.Temperature}
                                        onChange={handleChange}
                                        required
                                    />
                                </div>
                                <div className="mb-3">
                                    <label htmlFor="Top_P" className="form-label">Top_P:</label>
                                    <input
                                        type="number"
                                        className="form-control"
                                        id="Top_P"
                                        name="Top_P"
                                        value={newNim.Top_P}
                                        onChange={handleChange}
                                        required
                                    />
                                </div>
                                <div className="mb-3">
                                    <label htmlFor="Max_Tokens" className="form-label">Max Tokens:</label>
                                    <input
                                        type="number"
                                        className="form-control"
                                        id="Max_Tokens"
                                        name="Max_Tokens"
                                        value={newNim.Max_Tokens}
                                        onChange={handleChange}
                                        required
                                    />
                                </div>
                                <div className="mb-3 form-check">
                                    <label htmlFor="Stream" className="form-check-label">Stream</label>
                                    <input
                                        type="checkbox"
                                        className="form-check-input"
                                        id="Stream"
                                        name="Stream"
                                        checked={newNim.Stream}
                                        onChange={handleChange}
                                    />
                                </div>
                                <div className="text-center">
                                    <button type="submit" className="btn btn-primary">Create NIM</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    );
}

export default AddNIM;